/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { paymentsGuestInitialize } from "../funcs/paymentsGuestInitialize.js";
import { paymentsGuestPerformAction } from "../funcs/paymentsGuestPerformAction.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Guest extends ClientSDK {
    /**
     * Initialize a Bolt payment for guest shoppers
     *
     * @remarks
     * Initialize a Bolt guest shopper's intent to pay for a cart, using the specified payment method. Payments must be finalized before indicating the payment result to the shopper. Some payment methods will finalize automatically after initialization. For these payments, they will transition directly to "finalized" and the response from Initialize Payment will contain a finalized payment.
     */
    async initialize(
        security: operations.GuestPaymentsInitializeSecurity,
        xPublishableKey: string,
        xMerchantClientId: string,
        guestPaymentInitializeRequest: components.GuestPaymentInitializeRequest,
        options?: RequestOptions
    ): Promise<operations.GuestPaymentsInitializeResponse> {
        return unwrapAsync(
            paymentsGuestInitialize(
                this,
                security,
                xPublishableKey,
                xMerchantClientId,
                guestPaymentInitializeRequest,
                options
            )
        );
    }

    /**
     * Finalize a pending guest payment
     *
     * @remarks
     * Finalize a pending payment being made by a Bolt guest shopper. Upon receipt of a finalized payment result, payment success should be communicated to the shopper.
     */
    async performAction(
        security: operations.GuestPaymentsActionSecurity,
        id: string,
        xPublishableKey: string,
        xMerchantClientId: string,
        paymentActionRequest: components.PaymentActionRequest,
        options?: RequestOptions
    ): Promise<operations.GuestPaymentsActionResponse> {
        return unwrapAsync(
            paymentsGuestPerformAction(
                this,
                security,
                id,
                xPublishableKey,
                xMerchantClientId,
                paymentActionRequest,
                options
            )
        );
    }
}
