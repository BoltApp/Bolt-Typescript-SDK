/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SDKOptions, serverURLFromOptions } from "../lib/config";
import { HTTPClient } from "../lib/http";
import { ClientSDK } from "../lib/sdks";
import { Account } from "./account";
import { OAuth } from "./oauth";
import { Payments } from "./payments";
import { Testing } from "./testing";

export class BoltTypescriptSDK extends ClientSDK {
    private readonly options$: SDKOptions;

    constructor(options: SDKOptions = {}) {
        super({
            client: options.httpClient || new HTTPClient(),
            baseURL: serverURLFromOptions(options),
        });

        this.options$ = options;
        void this.options$;
    }

    private _account?: Account;
    get account() {
        return (this._account ??= new Account(this.options$));
    }

    private _payments?: Payments;
    get payments() {
        return (this._payments ??= new Payments(this.options$));
    }

    private _oAuth?: OAuth;
    get oAuth() {
        return (this._oAuth ??= new OAuth(this.options$));
    }

    private _testing?: Testing;
    get testing() {
        return (this._testing ??= new Testing(this.options$));
    }
}
