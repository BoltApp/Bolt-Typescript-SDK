/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { testingCreateAccount } from "../funcs/testingCreateAccount.js";
import { testingGetCreditCard } from "../funcs/testingGetCreditCard.js";
import { testingTestingAccountPhoneGet } from "../funcs/testingTestingAccountPhoneGet.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Testing extends ClientSDK {
    /**
     * Create a test account
     *
     * @remarks
     * Create a Bolt shopper account for testing purposes.
     */
    async createAccount(
        security: operations.TestingAccountCreateSecurity,
        xPublishableKey: string,
        accountTestCreationData: components.AccountTestCreationData,
        options?: RequestOptions
    ): Promise<operations.TestingAccountCreateResponse> {
        return unwrapAsync(
            testingCreateAccount(this, security, xPublishableKey, accountTestCreationData, options)
        );
    }

    /**
     * Get a random phone number
     *
     * @remarks
     * Get a random, fictitious phone number that is not assigned to any existing Bolt account.
     */
    async testingAccountPhoneGet(
        security: operations.TestingAccountPhoneGetSecurity,
        xPublishableKey: string,
        options?: RequestOptions
    ): Promise<operations.TestingAccountPhoneGetResponse> {
        return unwrapAsync(testingTestingAccountPhoneGet(this, security, xPublishableKey, options));
    }

    /**
     * Retrieve a tokenized test credit card
     *
     * @remarks
     * Retrieve a test credit card that can be used to process payments in your Bolt testing environment. The response includes the card's Bolt credit card token.
     */
    async getCreditCard(
        request: operations.TestingCreditCardGetRequestBody,
        security: operations.TestingCreditCardGetSecurity,
        options?: RequestOptions
    ): Promise<operations.TestingCreditCardGetResponse> {
        return unwrapAsync(testingGetCreditCard(this, request, security, options));
    }
}
