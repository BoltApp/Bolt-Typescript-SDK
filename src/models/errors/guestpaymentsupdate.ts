/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ErrorT, ErrorT$inboundSchema, ErrorT$Outbound, ErrorT$outboundSchema } from "./error.js";
import {
    FieldError,
    FieldError$inboundSchema,
    FieldError$Outbound,
    FieldError$outboundSchema,
} from "./fielderror.js";
import * as z from "zod";

/**
 * An error has occurred, and further details are contained in the response
 */
export type GuestPaymentsUpdateResponseBody = ErrorT | FieldError;

/** @internal */
export const GuestPaymentsUpdateResponseBody$inboundSchema: z.ZodType<
    GuestPaymentsUpdateResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([ErrorT$inboundSchema, FieldError$inboundSchema]);

/** @internal */
export type GuestPaymentsUpdateResponseBody$Outbound = ErrorT$Outbound | FieldError$Outbound;

/** @internal */
export const GuestPaymentsUpdateResponseBody$outboundSchema: z.ZodType<
    GuestPaymentsUpdateResponseBody$Outbound,
    z.ZodTypeDef,
    GuestPaymentsUpdateResponseBody
> = z.union([ErrorT$outboundSchema, FieldError$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GuestPaymentsUpdateResponseBody$ {
    /** @deprecated use `GuestPaymentsUpdateResponseBody$inboundSchema` instead. */
    export const inboundSchema = GuestPaymentsUpdateResponseBody$inboundSchema;
    /** @deprecated use `GuestPaymentsUpdateResponseBody$outboundSchema` instead. */
    export const outboundSchema = GuestPaymentsUpdateResponseBody$outboundSchema;
    /** @deprecated use `GuestPaymentsUpdateResponseBody$Outbound` instead. */
    export type Outbound = GuestPaymentsUpdateResponseBody$Outbound;
}
