/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  ErrorT,
  ErrorT$inboundSchema,
  ErrorT$Outbound,
  ErrorT$outboundSchema,
} from "./error.js";
import {
  FieldError,
  FieldError$inboundSchema,
  FieldError$Outbound,
  FieldError$outboundSchema,
} from "./fielderror.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

/**
 * An error has occurred, and further details are contained in the response
 */
export type GuestPaymentsActionResponseBody = ErrorT | FieldError;

/** @internal */
export const GuestPaymentsActionResponseBody$inboundSchema: z.ZodType<
  GuestPaymentsActionResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([ErrorT$inboundSchema, FieldError$inboundSchema]);

/** @internal */
export type GuestPaymentsActionResponseBody$Outbound =
  | ErrorT$Outbound
  | FieldError$Outbound;

/** @internal */
export const GuestPaymentsActionResponseBody$outboundSchema: z.ZodType<
  GuestPaymentsActionResponseBody$Outbound,
  z.ZodTypeDef,
  GuestPaymentsActionResponseBody
> = z.union([ErrorT$outboundSchema, FieldError$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GuestPaymentsActionResponseBody$ {
  /** @deprecated use `GuestPaymentsActionResponseBody$inboundSchema` instead. */
  export const inboundSchema = GuestPaymentsActionResponseBody$inboundSchema;
  /** @deprecated use `GuestPaymentsActionResponseBody$outboundSchema` instead. */
  export const outboundSchema = GuestPaymentsActionResponseBody$outboundSchema;
  /** @deprecated use `GuestPaymentsActionResponseBody$Outbound` instead. */
  export type Outbound = GuestPaymentsActionResponseBody$Outbound;
}

export function guestPaymentsActionResponseBodyToJSON(
  guestPaymentsActionResponseBody: GuestPaymentsActionResponseBody,
): string {
  return JSON.stringify(
    GuestPaymentsActionResponseBody$outboundSchema.parse(
      guestPaymentsActionResponseBody,
    ),
  );
}

export function guestPaymentsActionResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GuestPaymentsActionResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GuestPaymentsActionResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GuestPaymentsActionResponseBody' from JSON`,
  );
}
