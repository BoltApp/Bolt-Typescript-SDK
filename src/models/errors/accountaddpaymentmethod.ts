/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CreditCardError, CreditCardError$ } from "./creditcarderror";
import { ErrorT, ErrorT$ } from "./error";
import { FieldError, FieldError$ } from "./fielderror";
import * as z from "zod";

/**
 * The payment method is invalid and cannot be added, or some other error has occurred
 */
export type AccountAddPaymentMethodResponseBody = ErrorT | FieldError | CreditCardError;

/** @internal */
export namespace AccountAddPaymentMethodResponseBody$ {
    export type Inbound = ErrorT$.Inbound | FieldError$.Inbound | CreditCardError$.Inbound;

    export type Outbound = ErrorT$.Outbound | FieldError$.Outbound | CreditCardError$.Outbound;
    export const inboundSchema: z.ZodType<
        AccountAddPaymentMethodResponseBody,
        z.ZodTypeDef,
        Inbound
    > = z.union([ErrorT$.inboundSchema, FieldError$.inboundSchema, CreditCardError$.inboundSchema]);
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AccountAddPaymentMethodResponseBody
    > = z.union([
        ErrorT$.outboundSchema,
        FieldError$.outboundSchema,
        CreditCardError$.outboundSchema,
    ]);
}
