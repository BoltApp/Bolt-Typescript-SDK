/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ErrorT,
  ErrorT$inboundSchema,
  ErrorT$Outbound,
  ErrorT$outboundSchema,
} from "./error.js";
import {
  FieldError,
  FieldError$inboundSchema,
  FieldError$Outbound,
  FieldError$outboundSchema,
} from "./fielderror.js";

/**
 * An error has occurred, and further details are contained in the response
 */
export type AccountAddressDeleteResponseBody = ErrorT | FieldError;

/** @internal */
export const AccountAddressDeleteResponseBody$inboundSchema: z.ZodType<
  AccountAddressDeleteResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([ErrorT$inboundSchema, FieldError$inboundSchema]);

/** @internal */
export type AccountAddressDeleteResponseBody$Outbound =
  | ErrorT$Outbound
  | FieldError$Outbound;

/** @internal */
export const AccountAddressDeleteResponseBody$outboundSchema: z.ZodType<
  AccountAddressDeleteResponseBody$Outbound,
  z.ZodTypeDef,
  AccountAddressDeleteResponseBody
> = z.union([ErrorT$outboundSchema, FieldError$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountAddressDeleteResponseBody$ {
  /** @deprecated use `AccountAddressDeleteResponseBody$inboundSchema` instead. */
  export const inboundSchema = AccountAddressDeleteResponseBody$inboundSchema;
  /** @deprecated use `AccountAddressDeleteResponseBody$outboundSchema` instead. */
  export const outboundSchema = AccountAddressDeleteResponseBody$outboundSchema;
  /** @deprecated use `AccountAddressDeleteResponseBody$Outbound` instead. */
  export type Outbound = AccountAddressDeleteResponseBody$Outbound;
}
