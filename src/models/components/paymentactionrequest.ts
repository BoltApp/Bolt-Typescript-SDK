/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum DotTag {
    Finalize = "finalize",
}

export type PaymentActionRequest = {
    dotTag: DotTag;
    /**
     * Optional redirect result token required for an APM payment (excluding PayPal).
     */
    redirectResult?: string | undefined;
};

/** @internal */
export const DotTag$ = z.nativeEnum(DotTag);

/** @internal */
export namespace PaymentActionRequest$ {
    export type Inbound = {
        ".tag": DotTag;
        redirect_result?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PaymentActionRequest, z.ZodTypeDef, Inbound> = z
        .object({
            ".tag": DotTag$,
            redirect_result: z.string().optional(),
        })
        .transform((v) => {
            return {
                dotTag: v[".tag"],
                ...(v.redirect_result === undefined ? null : { redirectResult: v.redirect_result }),
            };
        });

    export type Outbound = {
        ".tag": DotTag;
        redirect_result?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentActionRequest> = z
        .object({
            dotTag: DotTag$,
            redirectResult: z.string().optional(),
        })
        .transform((v) => {
            return {
                ".tag": v.dotTag,
                ...(v.redirectResult === undefined ? null : { redirect_result: v.redirectResult }),
            };
        });
}
