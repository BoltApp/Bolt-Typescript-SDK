/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    PaymentMethodAffirmOutput,
    PaymentMethodAffirmOutput$,
    PaymentMethodAffirmTag,
} from "./paymentmethodaffirmoutput.js";
import {
    PaymentMethodAfterpayOutput,
    PaymentMethodAfterpayOutput$,
    PaymentMethodAfterpayTag,
} from "./paymentmethodafterpayoutput.js";
import {
    DotTag,
    PaymentMethodCreditCard,
    PaymentMethodCreditCard$,
} from "./paymentmethodcreditcard.js";
import {
    PaymentMethodKlarnaAccountOutput,
    PaymentMethodKlarnaAccountOutput$,
    PaymentMethodKlarnaAccountTag,
} from "./paymentmethodklarnaaccountoutput.js";
import {
    PaymentMethodKlarnaOutput,
    PaymentMethodKlarnaOutput$,
    PaymentMethodKlarnaTag,
} from "./paymentmethodklarnaoutput.js";
import {
    PaymentMethodKlarnaPaynowOutput,
    PaymentMethodKlarnaPaynowOutput$,
    PaymentMethodKlarnaPaynowTag,
} from "./paymentmethodklarnapaynowoutput.js";
import {
    PaymentMethodPaypalOutput,
    PaymentMethodPaypalOutput$,
    PaymentMethodPaypalTag,
} from "./paymentmethodpaypaloutput.js";
import * as z from "zod";

export type PaymentMethod =
    | (PaymentMethodPaypalOutput & { dotTag: PaymentMethodPaypalTag.Paypal })
    | (PaymentMethodAffirmOutput & { dotTag: PaymentMethodAffirmTag.Affirm })
    | (PaymentMethodAfterpayOutput & { dotTag: PaymentMethodAfterpayTag.Afterpay })
    | (PaymentMethodKlarnaOutput & { dotTag: PaymentMethodKlarnaTag.Klarna })
    | (PaymentMethodKlarnaAccountOutput & { dotTag: PaymentMethodKlarnaAccountTag.KlarnaAccount })
    | (PaymentMethodKlarnaPaynowOutput & { dotTag: PaymentMethodKlarnaPaynowTag.KlarnaPaynow })
    | (PaymentMethodCreditCard & { dotTag: DotTag.CreditCard });

/** @internal */
export namespace PaymentMethod$ {
    export const inboundSchema: z.ZodType<PaymentMethod, z.ZodTypeDef, unknown> = z.union([
        PaymentMethodPaypalOutput$.inboundSchema.and(
            z
                .object({ ".tag": z.literal(PaymentMethodPaypalTag.Paypal) })
                .transform((v) => ({ dotTag: v[".tag"] }))
        ),
        PaymentMethodAffirmOutput$.inboundSchema.and(
            z
                .object({ ".tag": z.literal(PaymentMethodAffirmTag.Affirm) })
                .transform((v) => ({ dotTag: v[".tag"] }))
        ),
        PaymentMethodAfterpayOutput$.inboundSchema.and(
            z
                .object({ ".tag": z.literal(PaymentMethodAfterpayTag.Afterpay) })
                .transform((v) => ({ dotTag: v[".tag"] }))
        ),
        PaymentMethodKlarnaOutput$.inboundSchema.and(
            z
                .object({ ".tag": z.literal(PaymentMethodKlarnaTag.Klarna) })
                .transform((v) => ({ dotTag: v[".tag"] }))
        ),
        PaymentMethodKlarnaAccountOutput$.inboundSchema.and(
            z
                .object({ ".tag": z.literal(PaymentMethodKlarnaAccountTag.KlarnaAccount) })
                .transform((v) => ({ dotTag: v[".tag"] }))
        ),
        PaymentMethodKlarnaPaynowOutput$.inboundSchema.and(
            z
                .object({ ".tag": z.literal(PaymentMethodKlarnaPaynowTag.KlarnaPaynow) })
                .transform((v) => ({ dotTag: v[".tag"] }))
        ),
        PaymentMethodCreditCard$.inboundSchema.and(
            z
                .object({ ".tag": z.literal(DotTag.CreditCard) })
                .transform((v) => ({ dotTag: v[".tag"] }))
        ),
    ]);

    export type Outbound =
        | (PaymentMethodPaypalOutput$.Outbound & { ".tag": PaymentMethodPaypalTag.Paypal })
        | (PaymentMethodAffirmOutput$.Outbound & { ".tag": PaymentMethodAffirmTag.Affirm })
        | (PaymentMethodAfterpayOutput$.Outbound & { ".tag": PaymentMethodAfterpayTag.Afterpay })
        | (PaymentMethodKlarnaOutput$.Outbound & { ".tag": PaymentMethodKlarnaTag.Klarna })
        | (PaymentMethodKlarnaAccountOutput$.Outbound & {
              ".tag": PaymentMethodKlarnaAccountTag.KlarnaAccount;
          })
        | (PaymentMethodKlarnaPaynowOutput$.Outbound & {
              ".tag": PaymentMethodKlarnaPaynowTag.KlarnaPaynow;
          })
        | (PaymentMethodCreditCard$.Outbound & { ".tag": DotTag.CreditCard });
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentMethod> = z.union([
        PaymentMethodPaypalOutput$.outboundSchema.and(
            z
                .object({ dotTag: z.literal(PaymentMethodPaypalTag.Paypal) })
                .transform((v) => ({ ".tag": v.dotTag }))
        ),
        PaymentMethodAffirmOutput$.outboundSchema.and(
            z
                .object({ dotTag: z.literal(PaymentMethodAffirmTag.Affirm) })
                .transform((v) => ({ ".tag": v.dotTag }))
        ),
        PaymentMethodAfterpayOutput$.outboundSchema.and(
            z
                .object({ dotTag: z.literal(PaymentMethodAfterpayTag.Afterpay) })
                .transform((v) => ({ ".tag": v.dotTag }))
        ),
        PaymentMethodKlarnaOutput$.outboundSchema.and(
            z
                .object({ dotTag: z.literal(PaymentMethodKlarnaTag.Klarna) })
                .transform((v) => ({ ".tag": v.dotTag }))
        ),
        PaymentMethodKlarnaAccountOutput$.outboundSchema.and(
            z
                .object({ dotTag: z.literal(PaymentMethodKlarnaAccountTag.KlarnaAccount) })
                .transform((v) => ({ ".tag": v.dotTag }))
        ),
        PaymentMethodKlarnaPaynowOutput$.outboundSchema.and(
            z
                .object({ dotTag: z.literal(PaymentMethodKlarnaPaynowTag.KlarnaPaynow) })
                .transform((v) => ({ ".tag": v.dotTag }))
        ),
        PaymentMethodCreditCard$.outboundSchema.and(
            z
                .object({ dotTag: z.literal(DotTag.CreditCard) })
                .transform((v) => ({ ".tag": v.dotTag }))
        ),
    ]);
}
