/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type ProfileCreationData = {
    /**
     * Whether or not an account should be created.
     */
    createAccount: boolean;
    /**
     * The given name of the person associated with this profile.
     */
    firstName: string;
    /**
     * The last name of the person associated with this profile.
     */
    lastName: string;
    /**
     * The email address asscoiated with this profile.
     */
    email: string;
    /**
     * The phone number associated with this profile.
     */
    phone?: string | undefined;
};

/** @internal */
export namespace ProfileCreationData$ {
    export const inboundSchema: z.ZodType<ProfileCreationData, z.ZodTypeDef, unknown> = z
        .object({
            create_account: z.boolean(),
            first_name: z.string(),
            last_name: z.string(),
            email: z.string(),
            phone: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                create_account: "createAccount",
                first_name: "firstName",
                last_name: "lastName",
            });
        });

    export type Outbound = {
        create_account: boolean;
        first_name: string;
        last_name: string;
        email: string;
        phone?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ProfileCreationData> = z
        .object({
            createAccount: z.boolean(),
            firstName: z.string(),
            lastName: z.string(),
            email: z.string(),
            phone: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                createAccount: "create_account",
                firstName: "first_name",
                lastName: "last_name",
            });
        });
}
