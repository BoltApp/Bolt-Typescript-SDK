/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Cart, Cart$ } from "./cart";
import { z } from "zod";

export type PaymentUpdateRequest = {
    cart?: Cart | undefined;
};

/** @internal */
export namespace PaymentUpdateRequest$ {
    export type Inbound = {
        cart?: Cart$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PaymentUpdateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            cart: Cart$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.cart === undefined ? null : { cart: v.cart }),
            };
        });

    export type Outbound = {
        cart?: Cart$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentUpdateRequest> = z
        .object({
            cart: Cart$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.cart === undefined ? null : { cart: v.cart }),
            };
        });
}
