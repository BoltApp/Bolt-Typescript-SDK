/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum PaymentMethodPaypalTag {
    Paypal = "paypal",
}

export type PaymentMethodPaypalOutput = {
    dotTag: PaymentMethodPaypalTag;
};

export type PaymentMethodPaypal = {
    dotTag: PaymentMethodPaypalTag;
    /**
     * Redirect URL for successful PayPal transaction.
     */
    successUrl: string;
    /**
     * Redirect URL for canceled PayPal transaction.
     */
    cancelUrl: string;
};

/** @internal */
export namespace PaymentMethodPaypalTag$ {
    export const inboundSchema = z.nativeEnum(PaymentMethodPaypalTag);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace PaymentMethodPaypalOutput$ {
    export const inboundSchema: z.ZodType<PaymentMethodPaypalOutput, z.ZodTypeDef, unknown> = z
        .object({
            ".tag": PaymentMethodPaypalTag$.inboundSchema,
        })
        .transform((v) => {
            return {
                dotTag: v[".tag"],
            };
        });

    export type Outbound = {
        ".tag": string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentMethodPaypalOutput> = z
        .object({
            dotTag: PaymentMethodPaypalTag$.outboundSchema,
        })
        .transform((v) => {
            return {
                ".tag": v.dotTag,
            };
        });
}

/** @internal */
export namespace PaymentMethodPaypal$ {
    export const inboundSchema: z.ZodType<PaymentMethodPaypal, z.ZodTypeDef, unknown> = z
        .object({
            ".tag": PaymentMethodPaypalTag$.inboundSchema,
            success_url: z.string(),
            cancel_url: z.string(),
        })
        .transform((v) => {
            return {
                dotTag: v[".tag"],
                successUrl: v.success_url,
                cancelUrl: v.cancel_url,
            };
        });

    export type Outbound = {
        ".tag": string;
        success_url: string;
        cancel_url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentMethodPaypal> = z
        .object({
            dotTag: PaymentMethodPaypalTag$.outboundSchema,
            successUrl: z.string(),
            cancelUrl: z.string(),
        })
        .transform((v) => {
            return {
                ".tag": v.dotTag,
                success_url: v.successUrl,
                cancel_url: v.cancelUrl,
            };
        });
}
