/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Amount } from "./amount";
import { CartDiscount } from "./cartdiscount";
import { CartItem } from "./cartitem";
import { CartShipment } from "./cartshipment";
import { Expose, Type } from "class-transformer";

export class Cart extends SpeakeasyBase {
    /**
     * This value is used by Bolt as an external reference to a given order. This reference must be unique per successful transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "order_reference" })
    orderReference: string;

    /**
     * Used optionally to pass additional information like order numbers or other IDs as needed.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "order_description" })
    orderDescription?: string;

    /**
     * A shopper-facing identifier corresponding to the order reference associated with this transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "display_id" })
    displayId?: string;

    @SpeakeasyMetadata({ elemType: CartShipment })
    @Expose({ name: "shipments" })
    @Type(() => CartShipment)
    shipments?: CartShipment[];

    @SpeakeasyMetadata({ elemType: CartDiscount })
    @Expose({ name: "discounts" })
    @Type(() => CartDiscount)
    discounts?: CartDiscount[];

    @SpeakeasyMetadata({ elemType: CartItem })
    @Expose({ name: "items" })
    @Type(() => CartItem)
    items?: CartItem[];

    /**
     * A monetary amount, i.e. a base unit amount and a supported currency.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "total" })
    @Type(() => Amount)
    total: Amount;

    /**
     * A monetary amount, i.e. a base unit amount and a supported currency.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "tax" })
    @Type(() => Amount)
    tax: Amount;
}
