/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AccountTestPhoneData = {
  /**
   * A random, fictitious, unassigned phone number.
   */
  phone: string;
};

/** @internal */
export const AccountTestPhoneData$inboundSchema: z.ZodType<
  AccountTestPhoneData,
  z.ZodTypeDef,
  unknown
> = z.object({
  phone: z.string(),
});

/** @internal */
export type AccountTestPhoneData$Outbound = {
  phone: string;
};

/** @internal */
export const AccountTestPhoneData$outboundSchema: z.ZodType<
  AccountTestPhoneData$Outbound,
  z.ZodTypeDef,
  AccountTestPhoneData
> = z.object({
  phone: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountTestPhoneData$ {
  /** @deprecated use `AccountTestPhoneData$inboundSchema` instead. */
  export const inboundSchema = AccountTestPhoneData$inboundSchema;
  /** @deprecated use `AccountTestPhoneData$outboundSchema` instead. */
  export const outboundSchema = AccountTestPhoneData$outboundSchema;
  /** @deprecated use `AccountTestPhoneData$Outbound` instead. */
  export type Outbound = AccountTestPhoneData$Outbound;
}

export function accountTestPhoneDataToJSON(
  accountTestPhoneData: AccountTestPhoneData,
): string {
  return JSON.stringify(
    AccountTestPhoneData$outboundSchema.parse(accountTestPhoneData),
  );
}

export function accountTestPhoneDataFromJSON(
  jsonString: string,
): SafeParseResult<AccountTestPhoneData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AccountTestPhoneData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AccountTestPhoneData' from JSON`,
  );
}
