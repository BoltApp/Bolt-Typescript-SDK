/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export enum PaymentMethodKlarnaPaynowTag {
  KlarnaPaynow = "klarna_paynow",
}

export type PaymentMethodKlarnaPaynowOutput = {
  dotTag: PaymentMethodKlarnaPaynowTag;
};

export type PaymentMethodKlarnaPaynow = {
  dotTag: PaymentMethodKlarnaPaynowTag;
  /**
   * Return URL to return to after payment completion in Klarna.
   */
  returnUrl: string;
};

/** @internal */
export const PaymentMethodKlarnaPaynowTag$inboundSchema: z.ZodNativeEnum<
  typeof PaymentMethodKlarnaPaynowTag
> = z.nativeEnum(PaymentMethodKlarnaPaynowTag);

/** @internal */
export const PaymentMethodKlarnaPaynowTag$outboundSchema: z.ZodNativeEnum<
  typeof PaymentMethodKlarnaPaynowTag
> = PaymentMethodKlarnaPaynowTag$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentMethodKlarnaPaynowTag$ {
  /** @deprecated use `PaymentMethodKlarnaPaynowTag$inboundSchema` instead. */
  export const inboundSchema = PaymentMethodKlarnaPaynowTag$inboundSchema;
  /** @deprecated use `PaymentMethodKlarnaPaynowTag$outboundSchema` instead. */
  export const outboundSchema = PaymentMethodKlarnaPaynowTag$outboundSchema;
}

/** @internal */
export const PaymentMethodKlarnaPaynowOutput$inboundSchema: z.ZodType<
  PaymentMethodKlarnaPaynowOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  ".tag": PaymentMethodKlarnaPaynowTag$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    ".tag": "dotTag",
  });
});

/** @internal */
export type PaymentMethodKlarnaPaynowOutput$Outbound = {
  ".tag": string;
};

/** @internal */
export const PaymentMethodKlarnaPaynowOutput$outboundSchema: z.ZodType<
  PaymentMethodKlarnaPaynowOutput$Outbound,
  z.ZodTypeDef,
  PaymentMethodKlarnaPaynowOutput
> = z.object({
  dotTag: PaymentMethodKlarnaPaynowTag$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    dotTag: ".tag",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentMethodKlarnaPaynowOutput$ {
  /** @deprecated use `PaymentMethodKlarnaPaynowOutput$inboundSchema` instead. */
  export const inboundSchema = PaymentMethodKlarnaPaynowOutput$inboundSchema;
  /** @deprecated use `PaymentMethodKlarnaPaynowOutput$outboundSchema` instead. */
  export const outboundSchema = PaymentMethodKlarnaPaynowOutput$outboundSchema;
  /** @deprecated use `PaymentMethodKlarnaPaynowOutput$Outbound` instead. */
  export type Outbound = PaymentMethodKlarnaPaynowOutput$Outbound;
}

export function paymentMethodKlarnaPaynowOutputToJSON(
  paymentMethodKlarnaPaynowOutput: PaymentMethodKlarnaPaynowOutput,
): string {
  return JSON.stringify(
    PaymentMethodKlarnaPaynowOutput$outboundSchema.parse(
      paymentMethodKlarnaPaynowOutput,
    ),
  );
}

export function paymentMethodKlarnaPaynowOutputFromJSON(
  jsonString: string,
): SafeParseResult<PaymentMethodKlarnaPaynowOutput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaymentMethodKlarnaPaynowOutput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentMethodKlarnaPaynowOutput' from JSON`,
  );
}

/** @internal */
export const PaymentMethodKlarnaPaynow$inboundSchema: z.ZodType<
  PaymentMethodKlarnaPaynow,
  z.ZodTypeDef,
  unknown
> = z.object({
  ".tag": PaymentMethodKlarnaPaynowTag$inboundSchema,
  return_url: z.string(),
}).transform((v) => {
  return remap$(v, {
    ".tag": "dotTag",
    "return_url": "returnUrl",
  });
});

/** @internal */
export type PaymentMethodKlarnaPaynow$Outbound = {
  ".tag": string;
  return_url: string;
};

/** @internal */
export const PaymentMethodKlarnaPaynow$outboundSchema: z.ZodType<
  PaymentMethodKlarnaPaynow$Outbound,
  z.ZodTypeDef,
  PaymentMethodKlarnaPaynow
> = z.object({
  dotTag: PaymentMethodKlarnaPaynowTag$outboundSchema,
  returnUrl: z.string(),
}).transform((v) => {
  return remap$(v, {
    dotTag: ".tag",
    returnUrl: "return_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentMethodKlarnaPaynow$ {
  /** @deprecated use `PaymentMethodKlarnaPaynow$inboundSchema` instead. */
  export const inboundSchema = PaymentMethodKlarnaPaynow$inboundSchema;
  /** @deprecated use `PaymentMethodKlarnaPaynow$outboundSchema` instead. */
  export const outboundSchema = PaymentMethodKlarnaPaynow$outboundSchema;
  /** @deprecated use `PaymentMethodKlarnaPaynow$Outbound` instead. */
  export type Outbound = PaymentMethodKlarnaPaynow$Outbound;
}

export function paymentMethodKlarnaPaynowToJSON(
  paymentMethodKlarnaPaynow: PaymentMethodKlarnaPaynow,
): string {
  return JSON.stringify(
    PaymentMethodKlarnaPaynow$outboundSchema.parse(paymentMethodKlarnaPaynow),
  );
}

export function paymentMethodKlarnaPaynowFromJSON(
  jsonString: string,
): SafeParseResult<PaymentMethodKlarnaPaynow, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaymentMethodKlarnaPaynow$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentMethodKlarnaPaynow' from JSON`,
  );
}
