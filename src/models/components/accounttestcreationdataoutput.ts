/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose } from "class-transformer";

export enum EmailState {
    Missing = "missing",
    Unverified = "unverified",
    Verified = "verified",
}

export enum PhoneState {
    Missing = "missing",
    Unverified = "unverified",
    Verified = "verified",
}

export class AccountTestCreationDataOutput extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email: string;

    @SpeakeasyMetadata()
    @Expose({ name: "email_state" })
    emailState: EmailState;

    @SpeakeasyMetadata()
    @Expose({ name: "phone" })
    phone: string;

    @SpeakeasyMetadata()
    @Expose({ name: "phone_state" })
    phoneState: PhoneState;

    @SpeakeasyMetadata()
    @Expose({ name: "otp_code" })
    otpCode: string;

    @SpeakeasyMetadata()
    @Expose({ name: "oauth_code" })
    oauthCode: string;
}

export class AccountTestCreationData extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "email_state" })
    emailState: EmailState;

    @SpeakeasyMetadata()
    @Expose({ name: "phone_state" })
    phoneState: PhoneState;

    @SpeakeasyMetadata()
    @Expose({ name: "is_migrated" })
    isMigrated?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "has_address" })
    hasAddress?: boolean;
}
