/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Cart, Cart$inboundSchema, Cart$Outbound, Cart$outboundSchema } from "./cart.js";
import {
    Profile,
    Profile$inboundSchema,
    Profile$Outbound,
    Profile$outboundSchema,
} from "./profile.js";
import * as z from "zod";

export type Order = {
    profile: Profile;
    cart: Cart;
};

/** @internal */
export const Order$inboundSchema: z.ZodType<Order, z.ZodTypeDef, unknown> = z.object({
    profile: Profile$inboundSchema,
    cart: Cart$inboundSchema,
});

/** @internal */
export type Order$Outbound = {
    profile: Profile$Outbound;
    cart: Cart$Outbound;
};

/** @internal */
export const Order$outboundSchema: z.ZodType<Order$Outbound, z.ZodTypeDef, Order> = z.object({
    profile: Profile$outboundSchema,
    cart: Cart$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Order$ {
    /** @deprecated use `Order$inboundSchema` instead. */
    export const inboundSchema = Order$inboundSchema;
    /** @deprecated use `Order$outboundSchema` instead. */
    export const outboundSchema = Order$outboundSchema;
    /** @deprecated use `Order$Outbound` instead. */
    export type Outbound = Order$Outbound;
}
