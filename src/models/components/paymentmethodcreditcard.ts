/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import { AddressReference, AddressReference$ } from "./addressreference";
import { AddressReferenceInput, AddressReferenceInput$ } from "./addressreferenceinput";
import { CreditCardNetwork, CreditCardNetwork$ } from "./creditcardnetwork";
import * as z from "zod";

export enum DotTag {
    CreditCard = "credit_card",
}

export type PaymentMethodCreditCard = {
    dotTag: DotTag;
    id?: string | undefined;
    billingAddress: AddressReference;
    /**
     * The credit card's network.
     */
    network: CreditCardNetwork;
    /**
     * The account number's last four digits.
     */
    last4: string;
    /**
     * The expiration date, in YYYY-MM format.
     */
    expiration: string;
};

export type PaymentMethodCreditCardInput = {
    dotTag: DotTag;
    billingAddress: AddressReferenceInput;
    /**
     * The credit card's network.
     */
    network: CreditCardNetwork;
    /**
     * The Bank Identification Number (BIN). This is typically the first 4 to 6 digits of the account number.
     */
    bin: string;
    /**
     * The account number's last four digits.
     */
    last4: string;
    /**
     * The expiration date, in YYYY-MM format.
     */
    expiration: string;
    /**
     * The Bolt token associated with the credit card.
     */
    token: string;
};

/** @internal */
export namespace DotTag$ {
    export const inboundSchema = z.nativeEnum(DotTag);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace PaymentMethodCreditCard$ {
    export const inboundSchema: z.ZodType<PaymentMethodCreditCard, z.ZodTypeDef, unknown> = z
        .object({
            ".tag": DotTag$.inboundSchema,
            id: z.string().optional(),
            billing_address: AddressReference$.inboundSchema,
            network: CreditCardNetwork$.inboundSchema,
            last4: z.string(),
            expiration: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                ".tag": "dotTag",
                billing_address: "billingAddress",
            });
        });

    export type Outbound = {
        ".tag": string;
        id?: string | undefined;
        billing_address: AddressReference$.Outbound;
        network: string;
        last4: string;
        expiration: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentMethodCreditCard> = z
        .object({
            dotTag: DotTag$.outboundSchema,
            id: z.string().optional(),
            billingAddress: AddressReference$.outboundSchema,
            network: CreditCardNetwork$.outboundSchema,
            last4: z.string(),
            expiration: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                dotTag: ".tag",
                billingAddress: "billing_address",
            });
        });
}

/** @internal */
export namespace PaymentMethodCreditCardInput$ {
    export const inboundSchema: z.ZodType<PaymentMethodCreditCardInput, z.ZodTypeDef, unknown> = z
        .object({
            ".tag": DotTag$.inboundSchema,
            billing_address: AddressReferenceInput$.inboundSchema,
            network: CreditCardNetwork$.inboundSchema,
            bin: z.string(),
            last4: z.string(),
            expiration: z.string(),
            token: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                ".tag": "dotTag",
                billing_address: "billingAddress",
            });
        });

    export type Outbound = {
        ".tag": string;
        billing_address: AddressReferenceInput$.Outbound;
        network: string;
        bin: string;
        last4: string;
        expiration: string;
        token: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentMethodCreditCardInput> = z
        .object({
            dotTag: DotTag$.outboundSchema,
            billingAddress: AddressReferenceInput$.outboundSchema,
            network: CreditCardNetwork$.outboundSchema,
            bin: z.string(),
            last4: z.string(),
            expiration: z.string(),
            token: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                dotTag: ".tag",
                billingAddress: "billing_address",
            });
        });
}
