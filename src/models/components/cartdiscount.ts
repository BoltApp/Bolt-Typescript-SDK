/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { Amount, Amount$ } from "./amount.js";
import * as z from "zod";

export type CartDiscount = {
    /**
     * A monetary amount, i.e. a base unit amount and a supported currency.
     */
    amount: Amount;
    /**
     * Discount code.
     */
    code?: string | undefined;
    /**
     * Used to provide a link to additional details, such as a landing page, associated with the discount offering.
     */
    detailsUrl?: string | undefined;
};

/** @internal */
export namespace CartDiscount$ {
    export const inboundSchema: z.ZodType<CartDiscount, z.ZodTypeDef, unknown> = z
        .object({
            amount: Amount$.inboundSchema,
            code: z.string().optional(),
            details_url: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                details_url: "detailsUrl",
            });
        });

    export type Outbound = {
        amount: Amount$.Outbound;
        code?: string | undefined;
        details_url?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CartDiscount> = z
        .object({
            amount: Amount$.outboundSchema,
            code: z.string().optional(),
            detailsUrl: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                detailsUrl: "details_url",
            });
        });
}
