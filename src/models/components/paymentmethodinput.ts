/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    PaymentMethodAffirm,
    PaymentMethodAffirm$,
    PaymentMethodAffirmTag,
} from "./paymentmethodaffirmoutput";
import {
    PaymentMethodAfterpay,
    PaymentMethodAfterpay$,
    PaymentMethodAfterpayTag,
} from "./paymentmethodafterpayoutput";
import {
    DotTag,
    PaymentMethodCreditCardInput,
    PaymentMethodCreditCardInput$,
} from "./paymentmethodcreditcard";
import {
    PaymentMethodKlarnaAccount,
    PaymentMethodKlarnaAccount$,
    PaymentMethodKlarnaAccountTag,
} from "./paymentmethodklarnaaccountoutput";
import {
    PaymentMethodKlarna,
    PaymentMethodKlarna$,
    PaymentMethodKlarnaTag,
} from "./paymentmethodklarnaoutput";
import {
    PaymentMethodKlarnaPaynow,
    PaymentMethodKlarnaPaynow$,
    PaymentMethodKlarnaPaynowTag,
} from "./paymentmethodklarnapaynowoutput";
import {
    PaymentMethodPaypal,
    PaymentMethodPaypal$,
    PaymentMethodPaypalTag,
} from "./paymentmethodpaypaloutput";
import * as z from "zod";

export type PaymentMethodInput =
    | (PaymentMethodAffirm & { dotTag: PaymentMethodAffirmTag.Affirm })
    | (PaymentMethodAfterpay & { dotTag: PaymentMethodAfterpayTag.Afterpay })
    | (PaymentMethodKlarna & { dotTag: PaymentMethodKlarnaTag.Klarna })
    | (PaymentMethodKlarnaAccount & { dotTag: PaymentMethodKlarnaAccountTag.KlarnaAccount })
    | (PaymentMethodKlarnaPaynow & { dotTag: PaymentMethodKlarnaPaynowTag.KlarnaPaynow })
    | (PaymentMethodPaypal & { dotTag: PaymentMethodPaypalTag.Paypal })
    | (PaymentMethodCreditCardInput & { dotTag: DotTag.CreditCard });

/** @internal */
export namespace PaymentMethodInput$ {
    export type Inbound =
        | (PaymentMethodAffirm$.Inbound & { ".tag": PaymentMethodAffirmTag.Affirm })
        | (PaymentMethodAfterpay$.Inbound & { ".tag": PaymentMethodAfterpayTag.Afterpay })
        | (PaymentMethodKlarna$.Inbound & { ".tag": PaymentMethodKlarnaTag.Klarna })
        | (PaymentMethodKlarnaAccount$.Inbound & {
              ".tag": PaymentMethodKlarnaAccountTag.KlarnaAccount;
          })
        | (PaymentMethodKlarnaPaynow$.Inbound & {
              ".tag": PaymentMethodKlarnaPaynowTag.KlarnaPaynow;
          })
        | (PaymentMethodPaypal$.Inbound & { ".tag": PaymentMethodPaypalTag.Paypal })
        | (PaymentMethodCreditCardInput$.Inbound & { ".tag": DotTag.CreditCard });

    export type Outbound =
        | (PaymentMethodAffirm$.Outbound & { ".tag": PaymentMethodAffirmTag.Affirm })
        | (PaymentMethodAfterpay$.Outbound & { ".tag": PaymentMethodAfterpayTag.Afterpay })
        | (PaymentMethodKlarna$.Outbound & { ".tag": PaymentMethodKlarnaTag.Klarna })
        | (PaymentMethodKlarnaAccount$.Outbound & {
              ".tag": PaymentMethodKlarnaAccountTag.KlarnaAccount;
          })
        | (PaymentMethodKlarnaPaynow$.Outbound & {
              ".tag": PaymentMethodKlarnaPaynowTag.KlarnaPaynow;
          })
        | (PaymentMethodPaypal$.Outbound & { ".tag": PaymentMethodPaypalTag.Paypal })
        | (PaymentMethodCreditCardInput$.Outbound & { ".tag": DotTag.CreditCard });
    export const inboundSchema: z.ZodType<PaymentMethodInput, z.ZodTypeDef, Inbound> = z.union([
        PaymentMethodAffirm$.inboundSchema.and(
            z
                .object({ ".tag": z.literal(PaymentMethodAffirmTag.Affirm) })
                .transform((v) => ({ dotTag: v[".tag"] }))
        ),
        PaymentMethodAfterpay$.inboundSchema.and(
            z
                .object({ ".tag": z.literal(PaymentMethodAfterpayTag.Afterpay) })
                .transform((v) => ({ dotTag: v[".tag"] }))
        ),
        PaymentMethodKlarna$.inboundSchema.and(
            z
                .object({ ".tag": z.literal(PaymentMethodKlarnaTag.Klarna) })
                .transform((v) => ({ dotTag: v[".tag"] }))
        ),
        PaymentMethodKlarnaAccount$.inboundSchema.and(
            z
                .object({ ".tag": z.literal(PaymentMethodKlarnaAccountTag.KlarnaAccount) })
                .transform((v) => ({ dotTag: v[".tag"] }))
        ),
        PaymentMethodKlarnaPaynow$.inboundSchema.and(
            z
                .object({ ".tag": z.literal(PaymentMethodKlarnaPaynowTag.KlarnaPaynow) })
                .transform((v) => ({ dotTag: v[".tag"] }))
        ),
        PaymentMethodPaypal$.inboundSchema.and(
            z
                .object({ ".tag": z.literal(PaymentMethodPaypalTag.Paypal) })
                .transform((v) => ({ dotTag: v[".tag"] }))
        ),
        PaymentMethodCreditCardInput$.inboundSchema.and(
            z
                .object({ ".tag": z.literal(DotTag.CreditCard) })
                .transform((v) => ({ dotTag: v[".tag"] }))
        ),
    ]);
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentMethodInput> = z.union([
        PaymentMethodAffirm$.outboundSchema.and(
            z
                .object({ dotTag: z.literal(PaymentMethodAffirmTag.Affirm) })
                .transform((v) => ({ ".tag": v.dotTag }))
        ),
        PaymentMethodAfterpay$.outboundSchema.and(
            z
                .object({ dotTag: z.literal(PaymentMethodAfterpayTag.Afterpay) })
                .transform((v) => ({ ".tag": v.dotTag }))
        ),
        PaymentMethodKlarna$.outboundSchema.and(
            z
                .object({ dotTag: z.literal(PaymentMethodKlarnaTag.Klarna) })
                .transform((v) => ({ ".tag": v.dotTag }))
        ),
        PaymentMethodKlarnaAccount$.outboundSchema.and(
            z
                .object({ dotTag: z.literal(PaymentMethodKlarnaAccountTag.KlarnaAccount) })
                .transform((v) => ({ ".tag": v.dotTag }))
        ),
        PaymentMethodKlarnaPaynow$.outboundSchema.and(
            z
                .object({ dotTag: z.literal(PaymentMethodKlarnaPaynowTag.KlarnaPaynow) })
                .transform((v) => ({ ".tag": v.dotTag }))
        ),
        PaymentMethodPaypal$.outboundSchema.and(
            z
                .object({ dotTag: z.literal(PaymentMethodPaypalTag.Paypal) })
                .transform((v) => ({ ".tag": v.dotTag }))
        ),
        PaymentMethodCreditCardInput$.outboundSchema.and(
            z
                .object({ dotTag: z.literal(DotTag.CreditCard) })
                .transform((v) => ({ ".tag": v.dotTag }))
        ),
    ]);
}
