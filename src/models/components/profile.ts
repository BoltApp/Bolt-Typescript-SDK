/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type Profile = {
    /**
     * The given name of the person associated with this profile.
     */
    firstName: string;
    /**
     * The last name of the person associated with this profile.
     */
    lastName: string;
    /**
     * The email address asscoiated with this profile.
     */
    email: string;
    /**
     * The phone number associated with this profile.
     */
    phone?: string | undefined;
};

/** @internal */
export namespace Profile$ {
    export type Inbound = {
        first_name: string;
        last_name: string;
        email: string;
        phone?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Profile, z.ZodTypeDef, Inbound> = z
        .object({
            first_name: z.string(),
            last_name: z.string(),
            email: z.string(),
            phone: z.string().optional(),
        })
        .transform((v) => {
            return {
                firstName: v.first_name,
                lastName: v.last_name,
                email: v.email,
                ...(v.phone === undefined ? null : { phone: v.phone }),
            };
        });

    export type Outbound = {
        first_name: string;
        last_name: string;
        email: string;
        phone?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Profile> = z
        .object({
            firstName: z.string(),
            lastName: z.string(),
            email: z.string(),
            phone: z.string().optional(),
        })
        .transform((v) => {
            return {
                first_name: v.firstName,
                last_name: v.lastName,
                email: v.email,
                ...(v.phone === undefined ? null : { phone: v.phone }),
            };
        });
}
